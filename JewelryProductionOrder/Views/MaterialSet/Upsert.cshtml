@model MaterialSetVM

<form method="post" class="container" id="materialForm">
	<div class="caption-top row">
		<h2>Choose material for jewelry @Model.Jewelry.Name</h2>
	</div>
	<div class="form-group">
		<div class="row">
			<div class="col-10">
				<input asp-for="@Model.Jewelry.Id" class="ms-2" type="hidden" />
				<div class="row">

					<div class="form-floating py-2 col-10">
						<select asp-for="@Model.Gemstone.Id" asp-items="@Model.GemstoneList" class="form-select border-0 shadow">
							<option disabled selected>--Select Gemstone--</option>
						</select>
						<label asp-for="Gemstone" class="ms-2"></label>
						@* <span asp-validation-for="MaterialSet.Materials" class="text-danger"></span> *@

					</div>
					<div class="col-2 my-2">
						<button type="button" id="submitAddGemstone" class="btn btn-primary form-control">Add Gemstone</button>
					</div>
				</div>
				<div class="row">

					<div class="form-floating py-2 col-5">
						@* Check if we can use @Model.MaterialSet.Materials *@
						<select asp-for="@Model.Material.Id" asp-items="@Model.MaterialList" class="form-select border-0 shadow">
							<option disabled selected>--Select Material--</option>
						</select>
						<label asp-for="Material" class="ms-2"></label>
						@* <span asp-validation-for="MaterialSet.Materials" class="text-danger"></span> *@

					</div>
					<div class="col-5 py-2 form-floating">
						<input asp-for="Weight" class="form-control border-0 shadow" />
						<label asp-for="Weight" class="">Weight (g)</label>
					</div>
					<div class="col-2 my-2">
						<button type="button" id="submitAddMaterial" class="btn btn-secondary form-control">Add Material</button>
					</div>
				</div>
			</div>
		</div>
	</div>
	@if (Model.MaterialSet is not null)
	{
		<div class="col-12 py-2 form-floating">

			<h2>Gemstones</h2>
			<table class="table table-bordered table-striped">
				<thead>
					<tr>
						<th>Name</th>
						<th>Weight (carat)</th>
						<th>Price</th>
						<th></th>
					</tr>
				</thead>
				<tbody>
					@foreach (Gemstone gemstone in @Model.MaterialSet.Gemstones)
					{
						<tr>
							<td>@gemstone.Name</td>
							<td>@gemstone.Weight</td>
							<td>@gemstone.Price</td>
							<td>
								<button onclick="@($"deleteGemstone({gemstone.Id},{Model.MaterialSet.Id})")"  type="button" class="btn btn-danger form-control">Delete</button>

							</td>
						</tr>
					}
				</tbody>
			</table>

		</div>
		<div class="col-12 py-2 form-floating">


			<h2>Materials</h2>
			<table class="table table-bordered table-striped">
				<thead>
					<tr>
						<th>Name</th>
						<th>Weight (g)</th>
						<th>Unit Price</th>
						<th>Total Price</th>
						<th></th>
					</tr>
				</thead>
				<tbody>
					@foreach (MaterialSetMaterial join in @Model.MaterialSet.MaterialSetMaterials)
					{
						var material = @Model.MaterialSet.Materials.FirstOrDefault(m => m.Id == join.MaterialId);
						<tr>
							<td>@material?.Name</td>
							<td><input id="@($"join-{join.MaterialId}-{join.MaterialSetId}")" name="weight" value="@join.Weight" /></td>
							<td>@material?.Price</td>
							<td>@(join.Weight * material?.Price)</td>
							<td class="d-flex gap-2">
								@* <form asp-controller="MaterialSet" asp-action="EditMaterial" method="post">
									<input type="hidden" name="materialSetId" value="@Model.MaterialSet.Id" />
									 <input type="hidden" name="weight" value="@join.Weight" /> 
									<input type="hidden" name="jewelryId" value="@Model.Jewelry.Id" />
									<input type="hidden" name="materialEditId" value="@join.MaterialId" />
								</form> *@
								<button type="submit" onclick="@($"callEditMaterial({join.MaterialId},{Model.MaterialSet.Id},{Model.Jewelry.Id})")" class="btn btn-secondary form-control btn-sm">Save</button>
								<button type="button" onclick="@($"callDeleteMaterial({join.MaterialId},{Model.MaterialSet.Id})")" class="btn btn-danger form-control btn-sm">Delete</button>

							</td>
						</tr>
					}
				</tbody>
			</table>
		</div>
	}
	<div class="col-md-3">
		<button type="submit" class="btn btn-primary form-control my-2">Create</button>
	</div>


</form>

@section Scripts
{
	@{
		await Html.RenderPartialAsync("_ValidationScriptsPartial");
	}
	<script>
		let form = document.getElementById('materialForm');
		document.getElementById('submitAddGemstone').addEventListener('click', function () {
			form.action = '@Url.Action("AddGemstone", "MaterialSet")';
			form.submit();
		});
		document.getElementById('submitAddMaterial').addEventListener('click', function () {

			form.action = '@Url.Action("AddMaterial", "MaterialSet")';
			form.submit();
		});
		// document.getElementById('submitDeleteGemstone').addEventListener('click', function () {

		// 	form.action = '@Url.Action("DeleteGemstone", "MaterialSet")';
		// 	form.submit();
		// });
		// document.getElementById('submitDeleteMaterial').addEventListener('click', function () {

		// 	form.action = '@Url.Action("DeleteMaterial", "MaterialSet")';
		// 	form.submit();
		// });
		// document.getElementById('submitEditMaterial').addEventListener('click', function () {

		// 	form.action = '@Url.Action("EditMaterial", "MaterialSet")';
		// 	form.submit();
		// });

		const callEditMaterial = (materialId, materialSetId, jewelryId) => {
			const weightInput = document.getElementById(`join-${materialId}-${materialSetId}`)
			const weight = weightInput.value;
			fetch(`/MaterialSet/EditMaterial?materialId=${materialId}&materialSetId=${materialSetId}&weight=${weight}&jewelryId=${jewelryId}`).
				then(data => data.json()).
				then(e => {
					toastr.success(e.message);
					// const myTimeout = setTimeout(myGreeting, 100);
					location.reload();
				})
		};
		const deleteGemstone = (gemstoneId, materialSetId) => {
			fetch(`/MaterialSet/DeleteGemstone?gemstoneId=${gemstoneId}&materialSetId${materialSetId}`).
			then(data => data.json()).
			then(e => {
				toastr.success(e.message);
				// const myTimeout = setTimeout(myGreeting, 100);
				location.reload();
			});

		}

		const callDeleteMaterial = (materialId, materialSetId) => {
			fetch(`/MaterialSet/DeleteMaterial?materialId=${materialId}&materialSetId=${materialSetId}`).
				then(data => data.json()).
				then(e => {
					toastr.success(e.message);
					// Optionally, refresh the page or update the UI accordingly
					location.reload();
				});
		}
	</script>
}