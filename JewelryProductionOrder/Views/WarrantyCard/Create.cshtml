<style>
    button {
        background-color: #0095ff;
        border: 1px solid transparent;
        border-radius: 3px;
        box-shadow: rgba(255, 255, 255, .4) 0 1px 0 0 inset;
        box-sizing: border-box;
        color: #fff;
        cursor: pointer;
        display: inline-block;
        font-family: -apple-system,system-ui,"Segoe UI","Liberation Sans",sans-serif;
        font-size: 13px;
        font-weight: 400;
        line-height: 1.15385;
        margin: 0;
        outline: none;
        padding: 8px .8em;
        position: relative;
        text-align: center;
        text-decoration: none;
        user-select: none;
        -webkit-user-select: none;
        touch-action: manipulation;
        vertical-align: baseline;
        white-space: nowrap;
    }

    button:hover,
    button:focus {
        background-color: #07c;
    }

    button:focus {
        box-shadow: 0 0 0 4px rgba(0, 149, 255, .15);
    }

    button:active {
        background-color: #0064bd;
        box-shadow: none;
    }
    .form-group {
        display: flex;
        justify-content: space-between;
        margin-bottom: 20px;
    }

    .first-col {
        flex: 0 0 48%;
        display: flex;
        flex-direction: column;
    }

        .mid{
            margin-left: auto;
            margin-right: 0;
        }

    .labels {
        margin-bottom: 8px;
        font-weight: bold;
    }

    .input-field {
        width: 100%;
    }
</style>
<form method="post">
    <div>
        <div>
            <h2>Create Warranty Card</h2>
            <hr/>
        </div>
        <!-- <div asp-validation-summary="All"></div> -->
        <h1>Customer Information</h1>
        <div class="form-group form-control">
            <div class="first-col">
                <label for="customer-name">Customer</label>
                <select id="customer-name">
                    <option value="" disabled selected>Select a customer</option>
                </select>
            </div>
@*             <div class="first-col">
                <label Description class="labels">Type in the customer's ID</label>
                <input Descripsion type="text" id="customer-id" class="input-field" placeholder="Ex : 1A2b3C4d" readonly/>
            </div> *@
        </div>

        <div class="form-group">
            <div class="first-col">
                <label for="jewelryID">Jewelry ID</label>
                <select id="jewelryID">
                    <option value="" disabled selected>Select jewelry ID</option>
                </select>
            </div>
        </div>
        
        <div class="form-group">
            <div class="first-col">
                <label for="issued-date" class="labels">Issued Date (dd mm yyyy)</label>
                <input type="date" id="issued-date" class="input-field" onchange="updateDate('issued-date')">
            </div>
            <div class="first-col">
                <label for="expired-date" class="labels">Expired Date (dd mm yyyy)</label>
                <input type="date" id="expired-date" class="input-field" onchange="updateDate('expired-date')">
            </div>
        </div>
    </div>

    <button>Submit</button> <button>Cancel</button>

    <script>
        const customerData = {
            "1": 
            { 
                name: "Customer 1", 
                id: "C001", 
                jewelry: ["J001", "J002"] 
            },
            "2": 
            { 
                name: "Customer 2", 
                id: "C002", 
                jewelry: ["J003"] 
            },
            "3": 
            { 
                name: "Customer 3", 
                id: "C003", 
                jewelry: ["J004", "J005", "J006"] 
            },
            "4":
            {
                name: "Customer 4",
                id: "C004",
                jewelry: []
            }

        };

        window.onload = function () {
            const customerSelect = document.getElementById('customer-name');

            for (const key in customerData) {
                if (customerData.hasOwnProperty(key)) {
                    const option = document.createElement('option');
                    option.value = key;
                    option.text = customerData[key].name;
                    customerSelect.add(option);
                }
            }
        };

        function autofill() {
            const customerSelect = document.getElementById('customer-name');
            const customerIDInput = document.getElementById('customer-id');
            const jewelrySelect = document.getElementById('jewelryID');

            const selectedCustomerValue = customerSelect.value;

            const customer = customerData[selectedCustomerValue];

            customerIDInput.value = customer.id;

            jewelrySelect.innerHTML = '<option value="" disabled selected>Select jewelry ID</option>';
            if (customer.jewelry.length === 0) {
                const option = document.createElement('option');
                option.value = "";
                option.text = "This customer doesn't have any jewelry";
                option.disabled = true;
                jewelrySelect.add(option);
            } else {
                customer.jewelry.forEach(id => {
                    const option = document.createElement('option');
                    option.value = id;
                    option.text = id;
                    jewelrySelect.add(option);
                });
            }
        }
    </script>
</form>